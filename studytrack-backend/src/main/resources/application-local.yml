spring:
  datasource:
    url: jdbc:h2:mem:studytrack_local;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect
    properties:
      hibernate:
        format_sql: true
        show_sql: true
  h2:
    console:
      enabled: true
      path: /h2-console
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: # TODO: Google Client ID
            client-secret: # TODO: Google Client Secret
            scope:
              - profile
              - email
          naver:
            client-id: # TODO: Naver Client ID
            client-secret: # TODO: Naver Client Secret
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - name
              - email
            client-authentication-method: client_secret_post
          kakao:
            client-id: # TODO: Kakao Client ID
            client-secret: # TODO: Kakao Client Secret
            client-name: Kakao
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - profile_nickname
              - account_email
            client-authentication-method: client_secret_post
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

# CORS 설정
web:
  cors:
    allowed-origins: http://localhost:3000
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true

# JWT 설정
jwt:
  secret: # TODO: JWT Secret Key (개발용)
  access-token-validity-in-seconds: 3600 # 1시간
  refresh-token-validity-in-seconds: 86400 # 24시간

# 로깅 설정
logging:
  level:
    com.studytrack: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
